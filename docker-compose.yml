version: "3.8"
services:
  redis:
    image: redis:7.0.5-alpine3.16
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis-data:/data
    healthcheck:
      test: redis-cli ping | grep PONG
      interval: 3s
      timeout: 1s
    restart: on-failure
  api:
    build:
      dockerfile: Dockerfile.dev
    command: npm run start
    environment:
      RATE_LIMIT_PROVIDER: redis
      REDIS_URI: redis://redis:${REDIS_PORT}
      NODE_ENV: development
      PORT: ${PORT}
    ports:
      - ${PORT}:${PORT}
    healthcheck:
      test: wget -q -O - --tries=1 http://localhost:${PORT}/
      interval: 15s
      timeout: 1s
    restart: unless-stopped
    volumes:
      - .:/usr/app
    depends_on:
      redis:
        condition: service_healthy
volumes:
  redis-data:
